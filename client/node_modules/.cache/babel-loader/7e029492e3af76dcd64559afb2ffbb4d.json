{"ast":null,"code":"var _jsxFileName = \"/home/burhan/public_html/react-graphql/MinimalGQLSubscriptions/client/src/ToDoList.js\";\nimport React from 'react';\nimport ToDo from \"./ToDo\";\nexport default function ToDoList({\n  ToDos,\n  subscribeToNewToDos\n}) {\n  // When the component is mounted, subscribe to new To Dos\n  React.useEffect(() => subscribeToNewToDos(), []);\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, ToDos ? ToDos.map(todo => React.createElement(\"li\", {\n    key: todo.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(ToDo, {\n    title: todo.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }))) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"loading\"));\n}","map":{"version":3,"sources":["/home/burhan/public_html/react-graphql/MinimalGQLSubscriptions/client/src/ToDoList.js"],"names":["React","ToDo","ToDoList","ToDos","subscribeToNewToDos","useEffect","map","todo","id","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAlB,EAAkD;AAC7D;AACAJ,EAAAA,KAAK,CAACK,SAAN,CAAgB,MAAMD,mBAAmB,EAAzC,EAA6C,EAA7C;AAEA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,GAAGA,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAI;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,IAAI,CAACE,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,CAAlB,CAAH,GAA2E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADrF,CAFJ;AAMH","sourcesContent":["import React from 'react'\nimport ToDo from \"./ToDo\"\nexport default function ToDoList({ ToDos, subscribeToNewToDos }) {\n    // When the component is mounted, subscribe to new To Dos\n    React.useEffect(() => subscribeToNewToDos(), []);\n\n    return (\n\n        <ul>\n            {ToDos ? ToDos.map(todo => <li key={todo.id}><ToDo title={todo.title} /></li>) : <p>loading</p>}\n        </ul>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}